#!/bin/bash

# colorize manual pages
man() {
	local width
	width=$(tput cols)
	if [ "$width" -gt 80 ] ; then
		width=80
	fi

	env \
		LESS_TERMCAP_mb="$(printf '\e[1;31m')" \
		LESS_TERMCAP_md="$(printf '\e[1;31m')" \
		LESS_TERMCAP_me="$(printf '\e[0m')" \
		LESS_TERMCAP_se="$(printf '\e[0m')" \
		LESS_TERMCAP_so="$(printf '\e[1;44;33m')" \
		LESS_TERMCAP_ue="$(printf '\e[0m')" \
		LESS_TERMCAP_us="$(printf '\e[1;32m')" \
		MANWIDTH="$width" \
		man "$@"
}

gpg_tty() {
	echo UPDATESTARTUPTTY | gpg-connect-agent
}

9man() {
	9 man "$@" | $MANPAGER
}

gpg-pubkey() {
	gpg2 --export --armor "$KEY"
}

godoc() {
	go doc "$@" | $MANPAGER
}

gohelp() {
	go help "$@" | $MANPAGER
}

# perform a DNS lookup with ANY query returning must useful info
digany() {
	dig +nocmd "$1" any +multiline +noall +answer
}

# perform a reverse DNS lookup and return only the result
rev-dns() {
	dig -x "$1" +short
}

cds() {
  if cd "$@" 2> /dev/null; then
    return 0
  fi

  # expand search from $(pwd) first
  subdirs="$(find "$(pwd)" -type d -name "$d" -print -exec test -d '{}' \;)"

	if [ "${subdirs[0]}" == "" ] || [ "${subdirs[*]}" == "" ]; then
	  local srcroot="$HOME"
    local d="$1"
    if [[ -z "$d" ]]; then
      printf "cd: missing name\\n" 1>&2; return 1
    fi

    mapfile -t repo_dirs < <(find "$srcroot" \
      \( -type d -name "$d" -print \
      -exec test -d '{}'/.git \; \)| \
      sort -u)

    if [ "${repo_dirs[0]}" == "" ] || [ "${repo_dirs[*]}" == "" ]; then
      printf "cd: %s: no such project\\n" "$d" 1>&2; return 1
    fi

    # cd to the first matched path
    cd "${repo_dirs[0]}" || return 0
  else
    cd "${subdirs[0]}" || return 0
  fi
}
